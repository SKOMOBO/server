version: '2'
services:
  # gateway:
  #   image: devopsfaith/krakend:0.6.1
  #   ports:
  #   - "8080:8080"
  #   volumes:
  #   - ./krakend:/etc/krakend
  
  # # my actual code for the server
  # api:
  #   image: skomobo_server
  #   build: .

  # debugging
  # tracer:
  #   image: jaegar + golang library?

  # tick stack stolen from https://github.com/influxdata/TICK-docker/blob/master/1.3/docker-compose.yml
  # Define a Telegraf service
  telegraf:
    image: telegraf:1.4.0
    volumes:
      - ./etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    links:
      - influxdb
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"
  # Define an InfluxDB service
  influxdb:
    image: influxdb:1.3.5-alpine
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"
  # Define a Chronograf service
  chronograf:
    image: chronograf:1.3.8-alpine
    environment:
      INFLUXDB_URL: http://influxdb:8086
      KAPACITOR_URL: http://kapacitor:9092
    ports:
      - "8888:8888"
    links:
      - influxdb
      - kapacitor
  # Define a Kapacitor service
  kapacitor:
    image: kapacitor:1.3.3-alpine
    environment:
      KAPACITOR_HOSTNAME: kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
    links:
      - influxdb
    ports:
      - "9092:9092"
#

  # Define a service for using the influx CLI tool.
  # docker-compose run influxdb-cli
  # influxdb-cli:
  #   image: influxdb:1.3.5
  #   entrypoint:
  #     - influx
  #     - -host
  #     - influxdb
  #   links:
  #     - influxdb
  # Define a service for using the kapacitor CLI tool.
  # docker-compose run kapacitor-cli
  # kapacitor-cli:
  #   image: kapacitor:1.3.3-alpine
  #   entrypoint: bash
  #   environment:
  #     KAPACITOR_URL: http://kapacitor:9092
  #   links:
  #     - kapacitor
  # db:
  #   image: 

  # dashboard:
  #   # image: grafana probably replace with chronograph

  # ingestor:

  # mangagment ie uis for doing stuff, portainer and compose ui or consul, vault and nomad???

  # container_manager:
  #   image: portainer

  # compose_manager:
  #   image: compose-ui

  # secret_manager:
  #   image: hashicorp vault

# production use restart always to start on startup





  # nginx:
  #   image: nginx:1.15.15-alpine
  #   volumes:
  #   - ./mysite.template:/etc/nginx/conf.d/mysite.template
  #   ports:
  #   - "8080:80"
  #   environment:
  #   - NGINX_HOST=foobar.com
  #   - NGINX_PORT=80
  #   command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
  # redis:
  #   image: redis:3.0.7-alpine

  # gateway:
  #   # image: kong/kong:1.0rc1-alpine
  #   image: treegateway/tree-gateway:3.1.5
  #   depends_on: 
  #     - redis
  #   ports:
  #     - "8000:8000"


  # skombo_server:
  #     image: skomobo_server
  #     # depends_on:
  #     #   - "postgres"
  #     environment:
  #     #   TAX_DB_IP: "postgres"
  #     #   TAX_DB_PORT: "5432"
  #     #   TAX_DB_USER: "taxonomy_user"
  #     #   TAX_DB_PWD: "thistaxonomyisthebestthingever"
  #     #   TAX_DB: "marketdata"
  #       APP_ENV: dev
  #     #   DB_IP: mongo
  #     build: 
  #       context: .
  #       dockerfile: dev.dockerfile

  #     # ports:
  #     #   - "80:80"
  #     volumes:
  #       - ./src:/go/src/github.com/Ulfasaar/skomobo_server/app